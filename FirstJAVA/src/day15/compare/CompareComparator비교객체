# 객체 정렬을 위한 객체 간 크기 비교
- TreeSet, TreeMap은 element들을 자동적으로 정렬하는 기능이 있다. 
	List는 자동 정렬이 안되나, sort() 메서드를 사용 정렬 가능.
	그러나, 만일 이런 Collection에 기본 데이터 타입이 아닌 일반적 객체가 들어갈 경우, 
	정렬을 위해선 객체간의 크기 비교가 선행되어야 한다. 
		이때, 객체간 크기 비교를 구현하기 위해 2가지 인터페이스(Comparable, Comparator)를 활용할 수 있다. 
		(Dog로 만든 d1, d2 이런 것들이 있을 때, 단지 알파벳, 숫자론 할 수 없고, 실질적인 비교를 위해 기준점 만들기를 하는 것)
		
	# Comparable 인터페이스 구현 <- 클래스 자체에 집어넣는것
	 - Collection.sort(list) 사용하여 List 정렬
	 - TreeSet() 생성자를 사용했을 때 기본적으로 객체가 정렬되는 방식
	 - 구현 시 기존의 클래스를 수정해야 하며, compareTo() 구현해야 한다.
	 	-implements Comparable하고 compreTo override해야함.
	 - 기본 정렬 기준을 지정하는 것이라고 볼 수 있다.
	 
	# Comparator 인터페이스 구현 <- 비교할 대상을 별도로 구현해서 쓰는 것
	 - Collection.sort(list, Comparator객체) (<- comparator객체를 만들어야한다) 사용하여 List 정렬
	 - TreeSet(Comparator객체) 생성자 사용하여 원하는 방식으로 정렬되게 합니다.
	 - Comparator를 구현하는 새로운 클래스를 만들어 compare()메서드를 구현
	 - 기존 클래스를 수정하지 않고도 기존의 객체를 비교할 수 있다.
	 - 추가 정렬 기준을 지정하는 것이라고 볼 수 있다.