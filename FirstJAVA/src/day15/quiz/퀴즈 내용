#1

수많은 마라톤 선수들이 마라톤에 참여하였습니다.
단 한명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.
마라톤에 참여한 선수들의 이름이 담긴 배열 participants와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때
완주하지 못한 선수의 이름을 return하도록 solution 함수를 작성해주세요.

참고)
 - completion의 길이는 participant의 길이보다 1 작다.
 - 참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져있다.
 - 참가자 중에 동명 이인이 있을 수 있습니다.
 
 map과 getOrDefault를 활용
 
 partici									completion		return
 [leo, kiki, eden]							[eden, kiki]	leo
 [marina, josipa, nikola, vinko, filipa]	[-----]			vinko
 
 #2
 
 매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를 K이상으로 만들기 위해 
 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다. 
 
 방식)
 - 섞은 음식의 스코빌 지수는 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째로 맵지 않은 음식의 스코빌 지수*2)
 
 Leo는 모든 음식의 스코빌 지수가 K이상이 될 때까지 섞는다. 앞 뒤 앞 뒤 더하기
 Leo가 가진 음식의 스코빌 지수를 담은 배열 scoville과 원하는 스코빌 지수 K가 주어질 때, 모든 음식의 스코빌 지수를 K이상으로 만들기 위해 섞어야하는 최소 횟수를 리턴하도록 solution함수를 작성하라.
 
  - 함수는 모든 음식의 스코빌 지수를 K이상으로 만들 수 없는 경우 -1을 리턴하도록 합니다.
  
  scoville				k				return
  [1,2,3,9,10,12]		7				2
  
  Queue에는 우선 순위를 저장할 수 있는 PriorityQueue가 있다. 비교 메서드인 compare(), compareTo()를 이용하여 우선 순위를 지정하여, 사용할 수 있다.
  이 문제는 우선순위 큐를 이용하면 쉽게 해결된다.
  public static int solution(int[] scoville, int K){
  }