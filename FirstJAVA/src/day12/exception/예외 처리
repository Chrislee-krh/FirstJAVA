# Exception(예외) - 클래스
- Error는 프로그램의 실행에 치명적인 영향을 미치는 상황을 나타냄
- 따라서 Error가 발생하면 프로그램은 종료된다.
- 적절한 처리를 통해 프로그램이 계속 실행할 수 있는 정도의 에러

- Exception 처리는 2가지 방법

	> try ~ catch ~ finally
		- 예외의 원인이 현재 실행되는 블록에 있는 경우 직접 예외를 처리하는 구문
			e.g.)
			try {
					// 예외가 발생할 가능성이 있는 코드
			} catch(Exception e) {
					// 예외가 발생했을 때 실행할 코드
			} finally {
					// 반드시 실행해야할 코드 (ex] 자원 반납(scan.close))		
			
	> throws
		- 예외의 원인이 그 메서드를 호출하는 호출자에게 있는 경우
		- 예외 발생시 예외가 발생했음을 메서드 호출자에게 통지함.
		- 메서드 선언부에 throws 절을 사용
			e.g.) 반환타입 메서드명(매개변수) throws [예외1, 2, ...] {}
	
		- 사용자 정의 예외
			- Exception 또는 그 하위 예외 클래스들을 상속받아 구현함.
			- 예외를 발생시키고 싶을 때 쓰는 키워드: throw