// HashMap을 이용해 전화번호부를 구현해 보세요
	
	// 1. "그룹/전화번호/이름'을 저장해야 합니다.
	// 2. 그룹을 키값으로 넣으면 그 그룹에 해당하는 HashMap이 선택됩니다. 
	// 3. 그룹의 HashMap에 전화번호를 키값으로 넣으면 이름이 나온다
	
	// ####메서드####
	// 1. phoneBook에 새로운 그룹을 추가하는 메서드
	// 2. phoneBook의 모든 목록을 한번에 출력해주는 메서드
	// 3. 이미 존재하는 그룹에 전화번호를 추가하는 메서드(그룹이 없으면 추가 못함)
	//    (> 모든 전화번호를 HashSet형태로 반환 및 중복 체크 기능도 있어야 함)
	// 4. 전화번호의 일부를 입력하면 입력한 부분과 일치하는 모든 사람의 목록을 출력하는 메서드
	// 5. 이름을 입력하면 해당하는 사람의 전화번호를 모두 출력하는 메서드(동명이인이 있는 경우 여러개 출력)
	// *** 변경된 내용이 파일에 저장되어 프로그램을 다시 실행할 때도 유지되도록 만들어 주세요.!!!
	
그룹이 존재해야만 넣을 수 있고, 해당 정보는 원하는 key값인 그룹이름을 가진 곳으로 넣어야함


# 고객 정보 파일에 저장하기
1. byte단위? character?
 - byte로 저장: FileInputStream/FileOutputStream
 - char로 저장: FileReader/FileWriter
 
2. 어떤 형식으로 저장할 것인가? (저장방법 - 어떤 내용으로 저장할지 판단)
 고객 정보가 이름, 성별, 이메일, 나이가 있다고 가정하면,
  - 단순 텍스트를 사용하는 경우
    -e.g.) csv방식: 홍길동, M, hrh@test.com, 30\n
  	: 데이터 저장시 각 필드 구분자와 컬럼 구분자를 추가 해야하고, 정보를 잘라서 형 변환해야함
  		장단점: 범용적이지만 불편(구분자를 이용한 문자열 분리와 형 변환) - 나이일 때 int로 하지 않으면 몇 세이상 출력, +1 등이 안됨 
  	
  - DataOutputStream 클래스를 이용해서 저장하는 방법
   - 필드 구분자와 컬럼 구분자를 넣을 필요가 없다.
   - 읽은 정보 형변환 필요가 없다.
   - 단점: write했던 순서대로 읽어야함, 자바에서만 사용 가능.
   
  - 객체 직렬화를 이용해서 저장(Object serialization)
   - 가능 클래스만
   - 자바에서만 사용 가능.