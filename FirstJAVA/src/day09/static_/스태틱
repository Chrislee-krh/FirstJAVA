Usage Modifier 사용 제한자 c.f)접근 제한자= access modifier)
	- access modifier을 제외한 모든 modifier을 가리킨다.
	- 여기 Usage Modifier(사용 제한자) 중 static, final, abstract를 알아볼 예정
	- 이외에 transient, synchronized, volatile, native 등이 있다.
	
# static의 의미
	- 일반적으로 각 인스턴스들은 서로 독립적이라 객체 내에 변수 값은 서로 다름.
	- Person p1, Person p2가 있을 경우 각각의 p1.getName(), p2.getName()는 다른 값을 가질 수 있다.
	- static이 변수 앞에 붙으면 모든 인스턴스에 대해서 공유가 된다. 이 때 변수는 인스턴스 단위가 아닌, 클래스 단위로 바뀐다.
	- 그래서, static이 붙은 멤버 변수를 우리는 클래스 변수라 하며, static이 붙지 않은 변수를 인스턴스 변수라 부른다. (객체를 생성하지 않아도 된다.)
	- 메서드에 static이 붙으면, 해당 메서드는 인스턴스와 무관하기 때문에, 인스턴스를 생성하지 않고도 호출 가능.
	- static과 관련된 자바 문법
		> static 메서드 안에서는 non-static 멤버를 객체 생성 없이 직접 참조할 수 없다.
		> 반대로 static이 붙지 않은 메서드에서는 static 멤버들을 사용할 수 있다.
	- 주로 모든 인스턴스가 공통된 변수 값을 가져야할 때, static 변수를 사용하고, static 변수들과 관련된 작업을 하거나, 
		어떤 인스턴스 변수도 사용하지 않고, 매개변수로만 작업 처리하는 메서드는 static 메서드로 정의한다.
		e.g.) Math 클래스의 메서드들